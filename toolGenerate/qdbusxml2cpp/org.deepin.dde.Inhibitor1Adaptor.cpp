/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-session/dbus/adaptor/org.deepin.dde.Inhibitor1.xml -a ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Inhibitor1Adaptor -i ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Inhibitor1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Inhibitor1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class Inhibitor1Adaptor
 */

Inhibitor1Adaptor::Inhibitor1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

Inhibitor1Adaptor::~Inhibitor1Adaptor()
{
    // destructor
}

QString Inhibitor1Adaptor::GetAppId()
{
    // handle method call org.deepin.dde.Inhibitor1.GetAppId
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetAppId", Q_RETURN_ARG(QString, out0));
    return out0;
}

QDBusObjectPath Inhibitor1Adaptor::GetClientId()
{
    // handle method call org.deepin.dde.Inhibitor1.GetClientId
    QDBusObjectPath out0;
    QMetaObject::invokeMethod(parent(), "GetClientId", Q_RETURN_ARG(QDBusObjectPath, out0));
    return out0;
}

uint Inhibitor1Adaptor::GetFlags()
{
    // handle method call org.deepin.dde.Inhibitor1.GetFlags
    uint out0;
    QMetaObject::invokeMethod(parent(), "GetFlags", Q_RETURN_ARG(uint, out0));
    return out0;
}

QString Inhibitor1Adaptor::GetReason()
{
    // handle method call org.deepin.dde.Inhibitor1.GetReason
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetReason", Q_RETURN_ARG(QString, out0));
    return out0;
}

uint Inhibitor1Adaptor::GetToplevelXid()
{
    // handle method call org.deepin.dde.Inhibitor1.GetToplevelXid
    uint out0;
    QMetaObject::invokeMethod(parent(), "GetToplevelXid", Q_RETURN_ARG(uint, out0));
    return out0;
}

