/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-session/dbus/interface/org.deepin.dde.Bluetooth1.xml -a ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Bluetooth1Adaptor -i ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Bluetooth1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_BLUETOOTH1ADAPTOR_H
#define ORG_DEEPIN_DDE_BLUETOOTH1ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.Bluetooth1.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.Bluetooth1
 */
class Bluetooth1Adaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.Bluetooth1")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.Bluetooth1\">\n"
"    <method name=\"ClearUnpairedDevice\"/>\n"
"    <method name=\"ConnectDevice\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"devPath\"/>\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"    </method>\n"
"    <method name=\"DebugInfo\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"info\"/>\n"
"    </method>\n"
"    <method name=\"DisconnectAudioDevices\"/>\n"
"    <method name=\"DisconnectDevice\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"devPath\"/>\n"
"    </method>\n"
"    <method name=\"GetAdapters\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"adaptersJSON\"/>\n"
"    </method>\n"
"    <method name=\"GetDevices\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"devicesJSON\"/>\n"
"    </method>\n"
"    <method name=\"RegisterAgent\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"agentPath\"/>\n"
"    </method>\n"
"    <method name=\"RemoveDevice\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"o\" name=\"devPath\"/>\n"
"    </method>\n"
"    <method name=\"RequestDiscovery\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"    </method>\n"
"    <method name=\"SetAdapterAlias\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"alias\"/>\n"
"    </method>\n"
"    <method name=\"SetAdapterDiscoverable\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"discoverable\"/>\n"
"    </method>\n"
"    <method name=\"SetAdapterDiscoverableTimeout\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"discoverableTimeout\"/>\n"
"    </method>\n"
"    <method name=\"SetAdapterDiscovering\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"discovering\"/>\n"
"    </method>\n"
"    <method name=\"SetAdapterPowered\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"adapterPath\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"powered\"/>\n"
"    </method>\n"
"    <method name=\"SetDeviceAlias\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"alias\"/>\n"
"    </method>\n"
"    <method name=\"SetDeviceTrusted\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"trusted\"/>\n"
"    </method>\n"
"    <method name=\"UnregisterAgent\">\n"
"      <arg direction=\"in\" type=\"o\" name=\"agentPath\"/>\n"
"    </method>\n"
"    <signal name=\"AdapterAdded\">\n"
"      <arg type=\"s\" name=\"adapterJSON\"/>\n"
"    </signal>\n"
"    <signal name=\"AdapterRemoved\">\n"
"      <arg type=\"s\" name=\"adapterJSON\"/>\n"
"    </signal>\n"
"    <signal name=\"AdapterPropertiesChanged\">\n"
"      <arg type=\"s\" name=\"adapterJSON\"/>\n"
"    </signal>\n"
"    <signal name=\"DeviceAdded\">\n"
"      <arg type=\"s\" name=\"devJSON\"/>\n"
"    </signal>\n"
"    <signal name=\"DeviceRemoved\">\n"
"      <arg type=\"s\" name=\"devJSON\"/>\n"
"    </signal>\n"
"    <signal name=\"DevicePropertiesChanged\">\n"
"      <arg type=\"s\" name=\"devJSON\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"u\" name=\"State\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"CanSendFile\"/>\n"
"  </interface>\n"
        "")
public:
    Bluetooth1Adaptor(QObject *parent);
    virtual ~Bluetooth1Adaptor();

public: // PROPERTIES
    Q_PROPERTY(bool CanSendFile READ canSendFile)
    bool canSendFile() const;

    Q_PROPERTY(uint State READ state)
    uint state() const;

public Q_SLOTS: // METHODS
    void ClearUnpairedDevice();
    void ConnectDevice(const QDBusObjectPath &devPath, const QDBusObjectPath &adapterPath);
    QString DebugInfo();
    void DisconnectAudioDevices();
    void DisconnectDevice(const QDBusObjectPath &devPath);
    QString GetAdapters();
    QString GetDevices(const QDBusObjectPath &adapterPath);
    void RegisterAgent(const QDBusObjectPath &agentPath);
    void RemoveDevice(const QDBusObjectPath &adapterPath, const QDBusObjectPath &devPath);
    void RequestDiscovery(const QDBusObjectPath &adapterPath);
    void SetAdapterAlias(const QDBusObjectPath &adapterPath, const QString &alias);
    void SetAdapterDiscoverable(const QDBusObjectPath &adapterPath, bool discoverable);
    void SetAdapterDiscoverableTimeout(const QDBusObjectPath &adapterPath, uint discoverableTimeout);
    void SetAdapterDiscovering(const QDBusObjectPath &adapterPath, bool discovering);
    void SetAdapterPowered(const QDBusObjectPath &adapterPath, bool powered);
    void SetDeviceAlias(const QDBusObjectPath &device, const QString &alias);
    void SetDeviceTrusted(const QDBusObjectPath &device, bool trusted);
    void UnregisterAgent(const QDBusObjectPath &agentPath);
Q_SIGNALS: // SIGNALS
    void AdapterAdded(const QString &adapterJSON);
    void AdapterPropertiesChanged(const QString &adapterJSON);
    void AdapterRemoved(const QString &adapterJSON);
    void DeviceAdded(const QString &devJSON);
    void DevicePropertiesChanged(const QString &devJSON);
    void DeviceRemoved(const QString &devJSON);
};

#endif
