/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-session/dbus/interface/org.deepin.dde.SoundThemePlayer1.xml -a ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.SoundThemePlayer1Adaptor -i ./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.SoundThemePlayer1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-session/toolGenerate/qdbusxml2cpp/org.deepin.dde.SoundThemePlayer1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SoundThemePlayer1Adaptor
 */

SoundThemePlayer1Adaptor::SoundThemePlayer1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SoundThemePlayer1Adaptor::~SoundThemePlayer1Adaptor()
{
    // destructor
}

void SoundThemePlayer1Adaptor::EnableSound(const QString &name, bool enabled)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.EnableSound
    QMetaObject::invokeMethod(parent(), "EnableSound", Q_ARG(QString, name), Q_ARG(bool, enabled));
}

void SoundThemePlayer1Adaptor::EnableSoundDesktopLogin(bool enabled)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.EnableSoundDesktopLogin
    QMetaObject::invokeMethod(parent(), "EnableSoundDesktopLogin", Q_ARG(bool, enabled));
}

void SoundThemePlayer1Adaptor::Play(const QString &theme, const QString &event, const QString &device)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.Play
    QMetaObject::invokeMethod(parent(), "Play", Q_ARG(QString, theme), Q_ARG(QString, event), Q_ARG(QString, device));
}

void SoundThemePlayer1Adaptor::PlaySoundDesktopLogin()
{
    // handle method call org.deepin.dde.SoundThemePlayer1.PlaySoundDesktopLogin
    QMetaObject::invokeMethod(parent(), "PlaySoundDesktopLogin");
}

void SoundThemePlayer1Adaptor::PrepareShutdownSound(int uid)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.PrepareShutdownSound
    QMetaObject::invokeMethod(parent(), "PrepareShutdownSound", Q_ARG(int, uid));
}

void SoundThemePlayer1Adaptor::SaveAudioState(const QVariantMap &avtivePlayback)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.SaveAudioState
    QMetaObject::invokeMethod(parent(), "SaveAudioState", Q_ARG(QVariantMap, avtivePlayback));
}

void SoundThemePlayer1Adaptor::SetSoundTheme(const QString &theme)
{
    // handle method call org.deepin.dde.SoundThemePlayer1.SetSoundTheme
    QMetaObject::invokeMethod(parent(), "SetSoundTheme", Q_ARG(QString, theme));
}

